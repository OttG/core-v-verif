# CSR access test
# Generated by gen_csr_test.py (part of riscv-dv)
# Manual edits to fit with BSP and enhance debug
.include "user_define.h"
.section .text.start
.globl _start
.section .text
#.include "user_init.s"
.type _start, @function

_start:
    j _start_main

.globl _start_main
.section .text
_start_main:

	#ifdef NO_PULP
	#define EXP_MISA 0x40001104
	#else
	#define EXP_MISA 0x40801104
	#endif

###############################################################################
#
# Generated code starts...
#
###############################################################################
_start0:

    div x3, x0, x0

    li  x1, 0xFFFFFFFF
    li  x2, 0x00000003

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2

    lw  x5, 0x80(x0)
    lw  x6, 0x84(x0)
    lw  x7, 0x88(x0)
    lw  x8, 0x8C(x0)
    div x3, x1, x2
    rem x4, x1, x2
################################################################################
#
# Generated code ends...
#
################################################################################
test_done:
    lui a0,print_port>>12
    addi a1,zero,'\n'
    sw a1,0(a0)
    addi a1,zero,'C'
    sw a1,0(a0)
    addi a1,zero,'V'
    sw a1,0(a0)
    addi a1,zero,'3'
    sw a1,0(a0)
    addi a1,zero,'2'
    sw a1,0(a0)
    addi a1,zero,' '
    sw a1,0(a0)
    addi a1,zero,'D'
    sw a1,0(a0)
    addi a1,zero,'O'
    sw a1,0(a0)
    addi a1,zero,'N'
    sw a1,0(a0)
    addi a1,zero,'E'
    sw a1,0(a0)
    addi a1,zero,'\n'
    sw a1,0(a0)
    sw a1,0(a0)

csr_pass:
    li x18, 123456789
    li x17, 0x20000000
    sw x18,0(x17)
    wfi

csr_fail:
    lui a0,print_port>>12
    addi a1,zero,'\n'
    sw a1,0(a0)
    addi a1,zero,'C'
    sw a1,0(a0)
    addi a1,zero,'V'
    sw a1,0(a0)
    addi a1,zero,'3'
    sw a1,0(a0)
    addi a1,zero,'2'
    sw a1,0(a0)
    addi a1,zero,' '
    sw a1,0(a0)
    addi a1,zero,'F'
    sw a1,0(a0)
    addi a1,zero,'A'
    sw a1,0(a0)
    addi a1,zero,'I'
    sw a1,0(a0)
    addi a1,zero,'L'
    sw a1,0(a0)
    addi a1,zero,'\n'
    sw a1,0(a0)
    sw a1,0(a0)

    li x18, 1
    li x17, 0x20000000
    sw x18,0(x17)
    wfi
#
# end
#
